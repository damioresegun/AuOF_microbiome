BiocManager::install(c("microbiome/mia", "miaViz" "patchwork","plotly","ggpubr",
install.packages("BiocManager")
BiocManager::install(c("microbiome/mia", "miaViz" "patchwork","plotly","ggpubr",
library(BiocManager)
BiocManager::install(c("microbiome/mia", "miaViz" "patchwork","plotly","ggpubr",
BiocManager::install(c("microbiome/mia", "miaViz" "patchwork","plotly","ggpubr",
"gridExtra", "scater", "pheatmap", "ggtree", "sechm","fido",
"ggplot2", "knitr", "dplyr", "stringr", "cowplot"))
BiocManager::install(c("microbiome/mia", "miaViz" "patchwork","plotly","ggpubr", "gridExtra", "scater", "pheatmap", "ggtree", "sechm","fido",
"ggplot2", "knitr", "dplyr", "stringr", "cowplot"))
BiocManager::install(c("microbiome/mia", "miaViz" "patchwork","plotly","ggpubr", "gridExtra", "scater", "pheatmap", "ggtree", "sechm","fido",
"ggplot2", "knitr", "dplyr", "stringr", "cowplot"))
BiocManager::install(c("microbiome/mia", "miaViz" "patchwork","plotly","ggpubr", "gridExtra", "scater", "pheatmap", "ggtree", "sechm","fido","ggplot2", "knitr", "dplyr", "stringr", "cowplot"))
BiocManager::install(c("microbiome/mia", "miaViz", "patchwork","plotly","ggpubr", "gridExtra", "scater", "pheatmap",
"ggtree", "sechm","fido","ggplot2", "knitr", "dplyr", "stringr", "cowplot"))
BiocManager::install(c("remotes", "phyloseq"))
BiocManager::install(c("microbiome/mia", "miaViz", "patchwork","plotly","ggpubr", "gridExtra", "scater", "pheatmap",
"ggtree", "sechm","fido","ggplot2", "knitr", "dplyr", "stringr", "cowplot"))
BiocManager::install(c("microbiome/mia", "miaViz","remotes", "phyloseq"))
library(phyloseq)
?pick_new_outgroup
??pick_new_outgroup
source("C:/Users/dro/Dropbox/Work/MacLaptop/CMC_SoilProject/AuOF_microbiome/AuOF/Microbiome_Analysis/MicrobiomeAnalysis.R")
source("C:/Users/dro/Dropbox/Work/MacLaptop/CMC_SoilProject/AuOF_microbiome/AuOF/Microbiome_Analysis/MicrobiomeAnalysis.R")
(plot2 <- ggplot(CMCDataPrevalence, aes(TotalAbundance, Prevalence/nsamples(CMCData), color = Phylum)) +
geom_hline(yintercept = 0.05, alpha = 0.5, linetype = 2) + geom_point(size = 2, alpha = 0.3) +
scale_x_log10() + xlab("Total Abundance/Read count") + ylab("Proportional Prevalence") +
facet_wrap(~Phylum) + theme(legend.position = "none") +
labs(caption = "Total number of reads (Total Abundance) plotted against the proportion of samples that support each identified phylum.
As such, if a phylum is supported in all samples, the prevalence will be 1.
Proportional prevalence is calculated by dividing the prevalence of each phylum by the total number of samples.",
subtitle="Proportional prevalence vs Read count plotted for identified Phyla"))
source("C:/Users/dro/Dropbox/Work/MacLaptop/CMC_SoilProject/AuOF_microbiome/AuOF/Microbiome_Analysis/MicrobiomeAnalysis.R")
# plot the abundance of the filtered taxa
tiff("Filtered_Prevalence_TotalAbundance.tif", height = 3200, width = 4500, res = 300, units = "px")
ggplot(CMCDataPrevalence_Filt, aes(TotalAbundance, Prevalence/nsamples(CMCData_Filtered), color = Phylum)) +
geom_hline(yintercept = 0.05, alpha = 0.5, linetype = 2) + geom_point(size = 2, alpha = 0.3) +
scale_x_log10() + xlab("Total Abundance/Read count") + ylab("Proportional Prevalence") +
facet_wrap(~Phylum) + theme(legend.position = "none") +
labs(caption = "Total number of reads (Total Abundance) plotted against the proportion of samples that support each identified phylum after filtering for prevalence.
Prevalence filtering threshold was calculated by excluding any taxonomic features supported by <5% of samples.
After filtering, if a phylum is supported in all remaining samples, the prevalence will be 1.
Proportional prevalence is calculated by dividing the prevalence of each phylum by the total number of samples.",
subtitle="Filtered prevalence vs Read count plotted for identified Phyla")
dev.off()
# plot prevalence and total abundance i.e. this plot show the number of reads and the number of samples found that support each
# identified phylum
tiff("Prevalence_TotalAbundance.tif", height = 3200, width = 4500, res = 300, units = "px")
ggplot(CMCDataPrevalence, aes(TotalAbundance, Prevalence/nsamples(CMCData), color = Phylum)) +
geom_hline(yintercept = 0.05, alpha = 0.5, linetype = 2) + geom_point(size = 2, alpha = 0.3) +
scale_x_log10() + xlab("Total Abundance/Read count") + ylab("Proportional Prevalence") +
facet_wrap(~Phylum) + theme(legend.position = "none") +
labs(caption = "Total number of reads (Total Abundance) plotted against the proportion of samples that support each identified phylum.
As such, if a phylum is supported in all samples, the prevalence will be 1.
Proportional prevalence is calculated by dividing the prevalence of each phylum by the total number of samples.",
subtitle="Proportional prevalence vs Read count plotted for identified Phyla")
dev.off()
source("C:/Users/dro/Dropbox/Work/MacLaptop/CMC_SoilProject/AuOF_microbiome/AuOF/Microbiome_Analysis/MicrobiomeAnalysis.R")
source("C:/Users/dro/Dropbox/Work/MacLaptop/CMC_SoilProject/AuOF_microbiome/AuOF/Microbiome_Analysis/MicrobiomeAnalysis.R")
source("C:/Users/dro/Dropbox/Work/MacLaptop/CMC_SoilProject/AuOF_microbiome/AuOF/Microbiome_Analysis/MicrobiomeAnalysis.R")
source("C:/Users/dro/Dropbox/Work/MacLaptop/CMC_SoilProject/AuOF_microbiome/AuOF/Microbiome_Analysis/MicrobiomeAnalysis.R")
source("C:/Users/dro/Dropbox/Work/MacLaptop/CMC_SoilProject/AuOF_microbiome/AuOF/Microbiome_Analysis/MicrobiomeAnalysis.R")
source("C:/Users/dro/Dropbox/Work/MacLaptop/CMC_SoilProject/AuOF_microbiome/AuOF/Microbiome_Analysis/MicrobiomeAnalysis.R")
0.1*nsamples(CMCData)
keepTaxa = rownames(CMCDataPrevalence)[(CMCDataPrevalence$Prevalence >= (0.1*nsamples(CMCData)))]
length(keepTaxa)
##############################################################################################################################
#                                               COMPUTE RELATIVE ABUNDANCE                                                   #
##############################################################################################################################
# calculate and add the relative abundance to the object
CMCData_RelAbund <- transform_sample_counts(CMCData_Filtered, function(x) x/sum(x))
View(CMCData_Filtered)
write.csv(table(CMCData_RelAbund@otu_table), "Relative_Abundance.csv", row.names = FALSE)
sample_data(CMCData_Filtered)
# plot the dataset using phyla to colour the stacked bar chart
(plot4 <- plot_bar(CMCData_RelAbund, fill = "Phylum") +
geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = "stack") +
labs(x = "", y = "Relative Abundance\n") +
facet_wrap(~Sample, scale = "free") +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5)))
tiff("Taxonomy_RelativeAbundance.tif", width = 5000, height = 5000, units = "px", res = 300)
plot4
dev.off()
source("C:/Users/dro/Dropbox/Work/MacLaptop/CMC_SoilProject/AuOF_microbiome/AuOF/Microbiome_Analysis/MicrobiomeAnalysis.R")
# Plot absolute abundance of taxa
(plot1 <- plot_bar(CMCData, fill = "Phylum") +
geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = "stack") +
labs(x = "", y = "Absolute Abundance\n (Reads)\n") +
facet_wrap(~Location, scales = "free", nrow = 1) +
theme(legend.position = "bottom")+
theme(axis.text.x = element_text(angle = 0, hjust=0.5)))
# plot the dataset using phyla to colour the stacked bar chart
(plot4 <- plot_bar(CMCData_RelAbund, fill = "Phylum") +
geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = "stack") +
labs(x = "", y = "Relative Abundance\n") +
facet_wrap(~Location, scale = "free") +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5)))
# plot the dataset using phyla to colour the stacked bar chart
(plot4 <- plot_bar(CMCData_RelAbund, fill = "Phylum") +
geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = "stack") +
labs(x = "", y = "Relative Abundance\n") +
facet_wrap(~Location, scale = "free") +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5)))
##############################################################################################################################
#                                               COMPUTE RELATIVE ABUNDANCE                                                   #
##############################################################################################################################
# calculate and add the relative abundance to the object
CMCData_RelAbund <- transform_sample_counts(CMCData_Filtered, function(x) x/sum(x))
source("C:/Users/dro/Dropbox/Work/MacLaptop/CMC_SoilProject/AuOF_microbiome/AuOF/Microbiome_Analysis/MicrobiomeAnalysis.R")
sample_data(CMCData_Filtered)
source("C:/Users/dro/Dropbox/Work/MacLaptop/CMC_SoilProject/AuOF_microbiome/AuOF/Microbiome_Analysis/MicrobiomeAnalysis.R")
source("C:/Users/dro/Dropbox/Work/MacLaptop/CMC_SoilProject/AuOF_microbiome/AuOF/Microbiome_Analysis/MicrobiomeAnalysis.R")
# plot the dataset using phyla to colour the stacked bar chart
(plot4 <- plot_bar(CMCData_RelAbund, fill = "Phylum") +
geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = "stack") +
labs(x = "", y = "Relative Abundance\n") +
facet_wrap(~Location, scale = "free") +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5)))
sample_data(CMCData_Filtered)
# plot the dataset using phyla to colour the stacked bar chart
(plot4 <- plot_bar(CMCData_RelAbund, fill = "Phylum") +
geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = "stack") +
labs(x = "", y = "Relative Abundance\n") +
facet_wrap(~Region, scale = "free") +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5)))
# plot the dataset using phyla to colour the stacked bar chart
(plot4 <- plot_bar(CMCData_RelAbund, fill = "Phylum") +
geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = "stack") +
labs(x = "", y = "Relative Abundance\n") +
facet_wrap(~Location, scale = "free") +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5)))
View(CMCData_RelAbund)
View(CMCData_Filtered)
##############################################################################################################################
#                                               COMPUTE RELATIVE ABUNDANCE                                                   #
##############################################################################################################################
# Calculate alpha diversity using Shannon and Simpson indices
# normalise reads to an even depth
CMCData_RelAbund_Normal <- rarefy_even_depth(CMCData_RelAbund, rngseed = 12355, replace = FALSE)
CMCData_RelAbund_Normal
##############################################################################################################################
#                                               COMPUTE RELATIVE ABUNDANCE                                                   #
##############################################################################################################################
# Calculate alpha diversity using Shannon and Simpson indices
# normalise reads to an even depth
CMCData_RelAbund_Normal <- rarefy_even_depth(CMCData, rngseed = 12355, replace = FALSE)
##############################################################################################################################
#                                               COMPUTE RELATIVE ABUNDANCE                                                   #
##############################################################################################################################
# calculate and add the relative abundance to the object
CMCData_RelAbund <- transform_sample_counts(CMCData_Filtered, function(x) x/sum(x))
# write to file
write.csv(table(CMCData_RelAbund@otu_table), "Relative_Abundance.csv", row.names = FALSE)
# plot the dataset using phyla to colour the stacked bar chart
(plot4 <- plot_bar(CMCData_RelAbund, fill = "Phylum") +
geom_bar(aes(color = Phylum, fill = Phylum), stat = "identity", position = "stack") +
labs(x = "", y = "Relative Abundance\n") +
facet_wrap(~Location, scale = "free") +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5)))
tiff("Taxonomy_RelativeAbundance.tif", width = 5000, height = 5000, units = "px", res = 300)
print(plot4)
dev.off()
##############################################################################################################################
#                                               COMPUTE RELATIVE ABUNDANCE                                                   #
##############################################################################################################################
# Calculate alpha diversity using Shannon and Simpson indices
# normalise reads to an even depth
CMCData_RelAbund_Normal <- rarefy_even_depth(CMCData_RelAbund, rngseed = 12355, replace = FALSE)
##############################################################################################################################
#                                               COMPUTE ALPHA DIVERSITY                                                      #
##############################################################################################################################
# Calculate alpha diversity using Shannon and Simpson indices
# normalise reads to an even depth
CMCData_RelAbund_Normal <- rarefy_even_depth(CMCData, rngseed = 12355, replace = FALSE)
CMCData_RelAbund_Normal
# calculate alpha diversity
(alpha_div <- estimate_richness(CMCData_RelAbund_Normal))
View(alpha_div)
write.csv(alpha_div, "AlphaDiversity.csv", row.names = TRUE)
(plot5 <- plot_richness(CMCData_RelAbund_Normal, measures = c("Observed", "Shannon", "Chao1", "Simpson"), color = "Sample") +
geom_point(aes(color = Sample)) +
labs(color = "Sample"))
tiff("AlphaDiversity.tif", width = 4500, height = 3200, units = "px", res = 300)
print(plot5)
dev.off()
